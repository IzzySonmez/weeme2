import React, { useEffect, useMemo, useState } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { useLocation, useNavigate, Link } from 'react-router-dom';
import { LogIn, UserPlus, Sparkles } from 'lucide-react';

type Mode = 'login' | 'register';

interface LoginProps {
  mode?: Mode;
}

const Login: React.FC<LoginProps> = ({ mode }) => {
  const { login, register, user, isLoading } = useAuth();
  const navigate = useNavigate();
  const location = useLocation();

  // URL'den ?mode= al (prop yoksa)
  const urlMode = useMemo<Mode>(() => {
    const params = new URLSearchParams(location.search);
    const m = (params.get('mode') || '').toLowerCase();
    return (m === 'register' || m === 'login') ? (m as Mode) : 'login';
  }, [location.search]);

  const [active, setActive] = useState<Mode>(() => {
    // İlk render'da prop varsa onu kullan, yoksa URL'den al
    if (mode) return mode;
    return urlMode;
  });

  useEffect(() => {
    // Prop değişirse güncelle
    if (mode && mode !== active) {
      setActive(mode);
    }
  }, [mode, active]);

  useEffect(() => {
    // URL değişirse ve prop yoksa güncelle
    if (!mode && urlMode !== active) {
      setActive(urlMode);
    }
  }, [urlMode, active, mode]);

  // Login/register başarılıysa panele
  useEffect(() => {
    if (user) navigate('/app', { replace: true });
  }, [user, navigate]);

  // Form state
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState(''); // register için
  const [password, setPassword] = useState('');
  const [busy, setBusy] = useState(false);

  const handleLogin = async () => {
    if (!username || !password) return alert('Kullanıcı adı ve şifre girin.');
    setBusy(true);
    const ok = await login(username, password);
    setBusy(false);
    if (!ok) alert('Giriş başarısız.');
  };

  const handleRegister = async () => {
    if (!username || !email || !password) return alert('Kullanıcı adı, e-posta ve şifre girin.');
    setBusy(true);
    const ok = await register(username, email, password);
    setBusy(false);
    if (!ok) {
      // AuthContext duplicate kontrolleri alert basıyor; burada yedek uyarı bırakıyoruz
      return;
    }
  };

  if (isLoading) {
    return <div className="min-h-screen grid place-items-center text-gray-600">Yükleniyor…</div>;
  }

  return (
    <div className="min-h-screen bg-gray-50 flex items-center justify-center px-4">
      <div className="w-full max-w-md bg-white border rounded-xl shadow-sm p-6">
        <div className="mb-6 flex items-center justify-center">
          <Link
            to="/"
            className="inline-flex items-center gap-2 group"
            aria-label="weeme.ai ana sayfa"
          >
            <Sparkles className="h-6 w-6 text-purple-600 group-hover:text-purple-700 transition-colors" />
            <span className="text-lg font-semibold text-gray-900 group-hover:text-gray-800 transition-colors">
              weeme.ai
            </span>
          </Link>
        </div>

        <div className="text-center mb-6">
          <div className="text-sm text-gray-600">AI tabanlı SEO otomasyonu</div>
        </div>

        {/* Tabs */}
        <div className="grid grid-cols-2 text-sm border rounded-lg overflow-hidden mb-6">
          <button
            onClick={() => setActive('login')}
            className={`py-2 ${active === 'login' ? 'bg-purple-600 text-white' : 'bg-white text-gray-700'}`}
          >
            Giriş Yap
          </button>
          <button
            onClick={() => setActive('register')}
            className={`py-2 ${active === 'register' ? 'bg-purple-600 text-white' : 'bg-white text-gray-700'}`}
          >
            Üye Ol
          </button>
        </div>

        {/* Forms */}
        {active === 'login' ? (
          <div className="space-y-3">
            <div>
              <label className="block text-sm font-medium text-gray-700">Kullanıcı Adı</label>
              <input
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                placeholder="kullaniciadi"
                className="mt-1 w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700">Şifre</label>
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="•••••••"
                className="mt-1 w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <button
              onClick={handleLogin}
              disabled={busy}
              className="w-full inline-flex items-center justify-center gap-2 bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 disabled:opacity-50"
            >
              <LogIn className="h-4 w-4" /> Giriş Yap
            </button>
            <div className="text-xs text-gray-600 text-center">
              Hesabın yok mu?{' '}
              <Link to="/register" className="text-purple-700 hover:underline">Üye ol</Link>
            </div>
          </div>
        ) : (
          <div className="space-y-3">
            <div>
              <label className="block text-sm font-medium text-gray-700">Kullanıcı Adı</label>
              <input
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                placeholder="kullaniciadi"
                className="mt-1 w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700">E‑posta</label>
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                placeholder="ornek@domain.com"
                className="mt-1 w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700">Şifre</label>
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="•••••••"
                className="mt-1 w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <button
              onClick={handleRegister}
              disabled={busy}
              className="w-full inline-flex items-center justify-center gap-2 bg-emerald-600 text-white px-4 py-2 rounded-md hover:bg-emerald-700 disabled:opacity-50"
            >
              <UserPlus className="h-4 w-4" /> Üye Ol
            </button>
            <div className="text-xs text-gray-600 text-center">
              Zaten hesabın var mı?{' '}
              <Link to="/login" className="text-purple-700 hover:underline">Giriş yap</Link>
            </div>
          </div>
        )}

        <div className="mt-6 text-xs text-gray-500 text-center">
          "Giriş Yap" veya "Üye Ol" diyerek <b>Kullanım Koşulları</b>nı kabul etmiş olursunuz.
        </div>
      </div>
    </div>
  );
};

export default Login;